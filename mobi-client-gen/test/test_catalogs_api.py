# coding: utf-8

"""
    Mobi

    Mobi REST API Documentation  # noqa: E501

    OpenAPI spec version: 1.22.0-SNAPSHOT
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.catalogs_api import CatalogsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestCatalogsApi(unittest.TestCase):
    """CatalogsApi unit test stubs"""

    def setUp(self):
        self.api = CatalogsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_branch(self):
        """Test case for create_branch

        Creates a Branch for a VersionedRDFRecord identified by the IDs using the passed form data  # noqa: E501
        """
        pass

    def test_create_branch_commit(self):
        """Test case for create_branch_commit

        Creates a new Commit in the repository for a specific Branch using the InProgressCommit associated with the user making this request. The HEAD Commit is updated to be this new Commit  # noqa: E501
        """
        pass

    def test_create_in_progress_commit(self):
        """Test case for create_in_progress_commit

        Creates a InProgressCommit linked to a specific VersionedRDFRecord  # noqa: E501
        """
        pass

    def test_create_record(self):
        """Test case for create_record

        Creates a new Record in the Catalog  # noqa: E501
        """
        pass

    def test_create_tag(self):
        """Test case for create_tag

        Creates a Tag for the identified VersionedRecord  # noqa: E501
        """
        pass

    def test_create_unversioned_distribution(self):
        """Test case for create_unversioned_distribution

        Creates a new Distribution for the provided UnversionedRecord  # noqa: E501
        """
        pass

    def test_create_version(self):
        """Test case for create_version

        Creates a Version for the identified VersionedRecord using the passed form data and stores it in the repository. This Version will become the latest Version for the identified VersionedRecord  # noqa: E501
        """
        pass

    def test_create_versioned_distribution(self):
        """Test case for create_versioned_distribution

        Creates a Distribution for the identified Version  # noqa: E501
        """
        pass

    def test_delete_branch(self):
        """Test case for delete_branch

        Deletes a specific Branch for a specific VersionedRDFRecord  # noqa: E501
        """
        pass

    def test_delete_in_progress_commit(self):
        """Test case for delete_in_progress_commit

        Deletes the changes made in the User's current InProgressCommit for a specific VersionedRDFRecord  # noqa: E501
        """
        pass

    def test_delete_record(self):
        """Test case for delete_record

        Deletes the Catalog Record by its ID  # noqa: E501
        """
        pass

    def test_delete_unversioned_distribution(self):
        """Test case for delete_unversioned_distribution

        Deletes a specific Distribution of an UnversionedRecord  # noqa: E501
        """
        pass

    def test_delete_version(self):
        """Test case for delete_version

        Removes a specific Version from a VersionedRecord. If that Version happens to be the latest Version, the latest Version will be updated to be the previous Version  # noqa: E501
        """
        pass

    def test_delete_versioned_distribution(self):
        """Test case for delete_versioned_distribution

        Deletes a specific Distribution of the identified Version  # noqa: E501
        """
        pass

    def test_get_branch(self):
        """Test case for get_branch

        Get a specific Branch for a specific VersionedRDFRecord  # noqa: E501
        """
        pass

    def test_get_branch_commit(self):
        """Test case for get_branch_commit

        Gets the Commit identified by the provided IDs  # noqa: E501
        """
        pass

    def test_get_branches(self):
        """Test case for get_branches

        Gets a list of Branches associated with a VersionedRDFRecord identified by the provided IDs  # noqa: E501
        """
        pass

    def test_get_catalog(self):
        """Test case for get_catalog

        Retrieves the Catalog specified by the provided ID  # noqa: E501
        """
        pass

    def test_get_catalogs(self):
        """Test case for get_catalogs

        Retrieves the distributed and local Catalogs  # noqa: E501
        """
        pass

    def test_get_commit_chain(self):
        """Test case for get_commit_chain

        Gets a list of Commits associated with the Branch identified by the provided IDs which represents the Commit chain for that Branch. If a limit is passed which is greater than zero, will paginate the results. If a targetId is passed, then only commits between the HEAD commits of the branchId and targetId will be returned.  # noqa: E501
        """
        pass

    def test_get_compiled_resource(self):
        """Test case for get_compiled_resource

        Gets the Commit identified by the provided IDs and returns the compiled Resource following the Commit chain which terminates at the identified Commit  # noqa: E501
        """
        pass

    def test_get_conflicts(self):
        """Test case for get_conflicts

        Gets the Conflicts between the HEAD Commit of the Branch identified by the provided IDs in the path and the HEAD Commit of the Branch identified by the query parameter. For this comparison to be done, the Commits must have an ancestor Commit in common  # noqa: E501
        """
        pass

    def test_get_difference(self):
        """Test case for get_difference

        Gets the Difference between the HEAD Commit of the Branch identified by the provided IDs in the path and the HEAD Commit of the Branch identified by the query parameter. For this comparison to be done, the Commits must have an ancestor Commit in common.  # noqa: E501
        """
        pass

    def test_get_head(self):
        """Test case for get_head

        Gets the HEAD Commit for a specific Branch  # noqa: E501
        """
        pass

    def test_get_in_progress_commit(self):
        """Test case for get_in_progress_commit

        Gets the changes made in the User's current InProgressCommit for a specific VersionedRDFRecord  # noqa: E501
        """
        pass

    def test_get_keywords(self):
        """Test case for get_keywords

        Retrieves the Keywords in the Catalog  # noqa: E501
        """
        pass

    def test_get_latest_version(self):
        """Test case for get_latest_version

        Gets the latest Version of a VersionedRecord identified by the provided IDs  # noqa: E501
        """
        pass

    def test_get_master_branch(self):
        """Test case for get_master_branch

        Gets the master Branch of a VersionedRDFRecord identified by the provided IDs  # noqa: E501
        """
        pass

    def test_get_record(self):
        """Test case for get_record

        Retrieves the Catalog record by its ID  # noqa: E501
        """
        pass

    def test_get_record_types(self):
        """Test case for get_record_types

        Retrieves all the available record types  # noqa: E501
        """
        pass

    def test_get_records(self):
        """Test case for get_records

        Retrieves the Records in the Catalog  # noqa: E501
        """
        pass

    def test_get_sort_options(self):
        """Test case for get_sort_options

        Retrieves all the available sorting options  # noqa: E501
        """
        pass

    def test_get_unversioned_distribution(self):
        """Test case for get_unversioned_distribution

        Gets a specific Distribution of an UnversionedRecord  # noqa: E501
        """
        pass

    def test_get_unversioned_distributions(self):
        """Test case for get_unversioned_distributions

        Retrieves the list of Distributions associated with an UnversionedRecord  # noqa: E501
        """
        pass

    def test_get_version(self):
        """Test case for get_version

        Gets a specific Version for the identified VersionedRecord  # noqa: E501
        """
        pass

    def test_get_version_commit(self):
        """Test case for get_version_commit

        Gets the Commit associated with the identified Version using the provided IDs  # noqa: E501
        """
        pass

    def test_get_versioned_distribution(self):
        """Test case for get_versioned_distribution

        Gets a specific Distribution for the Version identified by the IDs  # noqa: E501
        """
        pass

    def test_get_versioned_distributions(self):
        """Test case for get_versioned_distributions

        Gets the list of all Distributions for the identified Version  # noqa: E501
        """
        pass

    def test_get_versions(self):
        """Test case for get_versions

        Gets a list of Versions for a VersionedRecord  # noqa: E501
        """
        pass

    def test_merge(self):
        """Test case for merge

        Performs a merge between the two Branches identified by the provided IDs. The addition and deletion statements that are required to resolve any conflicts will be used to create the merged Commit. The target Branch will point to the new merge commit, but the source Branch  will still point to the original head commit.  # noqa: E501
        """
        pass

    def test_update_branch(self):
        """Test case for update_branch

        Updates the specified Branch using the modifications in the provided newBranch for a specific VersionedRDFRecord  # noqa: E501
        """
        pass

    def test_update_in_progress_commit(self):
        """Test case for update_in_progress_commit

        Updates the InProgressCommit for a user identified by the provided IDs using the statements found in the provided form data. If the user does not have an InProgressCommit, one will be created with the provided data.  # noqa: E501
        """
        pass

    def test_update_record(self):
        """Test case for update_record

        Updates the Catalog Record by its ID using the provided Record JSON-LD   # noqa: E501
        """
        pass

    def test_update_unversioned_distribution(self):
        """Test case for update_unversioned_distribution

        Updates a specific Distribution for an UnversionedRecord identified by the provided IDs using the modifications in the provided JSON-LD  # noqa: E501
        """
        pass

    def test_update_version(self):
        """Test case for update_version

        Updates the Version identified by the provided IDs using the modifications in the provided JSON-LD  # noqa: E501
        """
        pass

    def test_update_versioned_distribution(self):
        """Test case for update_versioned_distribution

        Updates a specific Distribution of the identified Version with the modifications in the provided newDistribution  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
